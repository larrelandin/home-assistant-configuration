substitutions:
  static_ip: 192.168.10.62

esphome:
  name: garage-door-esp
  comment: $static_ip
  on_boot:
    priority: 200   # run after most hardware is up; not super critical
    then:
      - delay: 500ms    # small debounce for power-up quirks
      - if:
          condition:
            lambda: 'return id(garage_should_be_locked);'
          then:
            - lock.lock: lock_garage
          else:
            - lock.unlock: lock_garage
esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "8iZjjR6vQlB19toVfWVa1tphoEcABFXJOtktAY+oVdY="
  
ota:
  - platform: esphome
    password: !secret esp_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: '.landin.lan'
  fast_connect: true

  manual_ip:
    static_ip: $static_ip
    gateway: 192.168.10.1
    subnet: 255.255.255.0

text_sensor:
  - platform: version
    name: "ESPHome Version"

globals:
  - id: garage_should_be_locked
    type: bool
    restore_value: true
    initial_value: "true"

status_led:
  pin: 
    number: GPIO02
    inverted: true

output:
  - platform: gpio
    pin: GPIO0 #D3
    id: relay

lock:
  - platform: output
    id: lock_garage
    name: "Garagedörr"
    output: relay
    on_lock:
      then:
        - lambda: |-
            id(garage_should_be_locked) = true;
    on_unlock:
      then:
        - lambda: |-
            id(garage_should_be_locked) = false;

binary_sensor:
  - platform: gpio
    id: door_garage
    name: "Garagedörr"
    device_class: door
    pin:
      number: GPIO14 #D5
      mode: INPUT_PULLUP
      inverted: false
    filters:
      # Small filter, to debounce the magnet.
      - delayed_on: 25ms
      - delayed_off: 25ms
  - platform: status
    name: "Garagedörr ESP status"
