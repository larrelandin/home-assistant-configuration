# https://github.com/newlund/HA-Engine_heater
automation:
  - alias: "Start engine heater at calculated start time"
    trigger:
      platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_start_time.state }}'
        - condition: template
          value_template: "{{ states.sensor.car_heater_run_time.state|float > 0 }}"
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: "on"
    action:
      - service: switch.turn_on
        entity_id: switch.charge_amps_schuko

  - alias: "Stop engine heater at departure time"
    trigger:
      platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_actual_stop_time.state }}'
        - condition: template
          value_template: "{{ states.sensor.car_heater_run_time.state|float > 0 }}"
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: "on"
    action:
      - service: switch.turn_off
        entity_id: switch.charge_amps_schuko
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.car_heater_enable

  - alias: "Sample temperature 3h before departure time"
    trigger:
      platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_3h_before_start_time.state }}'
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: "on"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater_estimated_outside_temp
        value: "{{ states.sensor.ow_outside_temp_rounded.state }}"

  - alias: "Turn on heater if manually started through override"
    trigger:
      platform: state
      entity_id: input_boolean.car_heater_override
      to: "on"
    action:
      service: switch.turn_on
      entity_id: switch.charge_amps_schuko

  - alias: "Turn off heater if manually started after 1 hour"
    trigger:
      platform: state
      entity_id: input_boolean.car_heater_override
      to: "on"
      for:
        minutes: 60
    action:
      service: input_boolean.turn_off
      entity_id: input_boolean.car_heater_override

  - alias: "Turn off heater if ovveride turns off"
    trigger:
      platform: state
      entity_id: input_boolean.car_heater_override
      to: "off"
    action:
      service: switch.turn_off
      entity_id: switch.charge_amps_schuko

  - alias: "Car heater timer enabled"
    trigger:
      platform: state
      entity_id: input_boolean.car_heater_enable
      to: "on"
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater_estimated_outside_temp
        value: "{{ states.sensor.ow_outside_temp_rounded.state }}"

  - alias: "Car heater timer disabled"
    trigger:
      platform: state
      entity_id: input_boolean.car_heater_enable
      to: "off"
    condition:
      condition: state
      entity_id: input_boolean.car_heater_override
      state: "off"
    action:
      service: switch.turn_off
      entity_id: switch.charge_amps_schuko

# Input sensors
input_number:
  car_heater_hour:
    name: Timme
    icon: mdi:timer
    min: 0
    max: 23
    step: 1

  car_heater_minutes:
    name: Minut
    icon: mdi:timer
    min: 0
    max: 55
    step: 5

  car_heater_estimated_outside_temp:
    name: Uppskattad temperatur
    unit_of_measurement: Â°C
    icon: mdi:thermometer
    min: -30
    max: 30
    step: 0.5

# Boolean sensors
input_boolean:
  car_heater_enable:
    name: Aktivera timer
  car_heater_override:
    name: "Forcera timer (1 timme)"

# Template sensors
template:
  - binary_sensor:
    - name: engine_heater_on
      unique_id: 4df8c15e-3445-4632-a161-36f0de1b1d62
      device_class: heat
      state: "{{ is_state('switch.charge_amps_schuko', 'on') }}"

  - sensor:
    - name: car_heater_departure_time
      state: >
        {% if states('input_number.car_heater_hour')|int|string|length == 1 %}0{% endif -%}
        {{- states('input_number.car_heater_hour')|int|string -}}:
        {%- if states('input_number.car_heater_minutes')|int|string|length == 1 %}0{% endif -%}
        {{- states('input_number.car_heater_minutes')|int|string -}}

    - name: car_heater_run_time
      unique_id: e5fb852f-0a6d-468d-9e89-5605dc5b7513
      unit_of_measurement: h
      state: >
        {% if ((states('input_number.car_heater_estimated_outside_temp')|float) < 10) %}
          {% if not states('input_number.car_heater_estimated_outside_temp') == 'unknown' %}
            {{(states('input_number.car_heater_estimated_outside_temp')|float * (-0.05) + 1)|round(1)}}
          {%endif%}
        {%else%}
          0
        {%endif%}

    - name: car_heater_start_time
      unique_id: cef95a60-f32e-4fd9-b014-54c2b922d6fc
      state: >
        {% if states.sensor.car_heater_departure_time.state is defined %}
        {% if ((states('sensor.car_heater_run_time')|float) > 0) %}
          {{ strptime(((as_timestamp('1970-01-01 ' ~ states('sensor.car_heater_departure_time')) - (states('sensor.car_heater_run_time')|float * 3600))|timestamp_custom), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
        {%else%}
          Never
        {%endif%}
        {% else %}
          waiting for sensors
        {% endif%}

    - name: car_heater_3h_before_start_time
      unique_id: 96dfbea1-331e-4bfc-89fd-74415b3e2573
      state: >
        {% if states.sensor.car_heater_departure_time.state is defined %}
          {{ strptime(((as_timestamp('1970-01-01 ' ~ states('sensor.car_heater_departure_time')) - (10800))|timestamp_custom), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
        {% else %}
          waiting for sensors
        {% endif%}

    - name: car_heater_actual_stop_time
      unique_id: ccf99730-208d-4335-8281-a77f2110b5e5
      state: >
        {{ strptime((as_timestamp('1970-01-01 ' ~ states('sensor.car_heater_departure_time')) + (float ( 15*60 )))|timestamp_custom, '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
