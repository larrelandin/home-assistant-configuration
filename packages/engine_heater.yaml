# https://github.com/newlund/HA-Engine_heater
automation:
  - alias: 'Start engine heater at calculated start time'
    trigger:
      platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_start_time.state }}'
        - condition: template
          value_template: '{{ states.sensor.car_heater_run_time.state|float > 0 }}'
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.engine_heater_relay


  - alias: 'Stop engine heater at departure time'
    trigger:
      platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          #value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_departure_time.state }}'
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_actual_stop_time.state }}'
        - condition: template
          value_template: '{{ states.sensor.car_heater_run_time.state|float > 0 }}'
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.engine_heater_relay
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.car_heater_enable

  - alias: 'Sample temperature 3h before departure time'
    trigger:
      platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater_3h_before_start_time.state }}'
        - condition: state
          entity_id: input_boolean.car_heater_enable
          state: 'on'
    action:
      service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater_3h_before_temp
        value: '{{ states.sensor.ow_outside_temp_rounded.state }}'

# Input sensors
input_number:
  car_heater_hour:
    name: Timme
    icon: mdi:timer
    min: 0
    max: 23
    step: 1

  car_heater_minutes:
    name: Minut
    icon: mdi:timer
    min: 0
    max: 55
    step: 5

  car_heater_3h_before_temp:
    name: Uppskattad temperatur
    unit_of_measurement: °C
    icon: mdi:thermometer
    min: -30
    max: 30
    step: 0.5

    
# Template sensors
sensor:
  - platform: template
    sensors:
      car_heater_departure_time:
        friendly_name: 'Tid för avfärd'
        icon_template: mdi:clock
        value_template: >-
          {% if states('input_number.car_heater_hour')|int|string|length == 1 %}0{% endif -%}
          {{- states('input_number.car_heater_hour')|int|string -}}:
          {%- if states('input_number.car_heater_minutes')|int|string|length == 1 %}0{% endif -%}
          {{- states('input_number.car_heater_minutes')|int|string -}}
          
  - platform: template
    sensors:
      car_heater_run_time:
        friendly_name: 'Beräknad gångtid'
        unit_of_measurement: h
        value_template: >
          {% if ((states('input_number.car_heater_3h_before_temp')|float) < 10) %}
            {% if not states('input_number.car_heater_3h_before_temp') == 'unknown' %}
              {{(states('input_number.car_heater_3h_before_temp')|float * (-0.05) + 1)|round(1)}}
            {%endif%}
          {%else%}
            0
          {%endif%}
          
  - platform: template
    sensors:
      car_heater_start_time:
        friendly_name: 'Beräknad starttid'
        icon_template: mdi:clock
        value_template: >
          {% if states.sensor.car_heater_departure_time.state is defined %}
            {% if ((states('sensor.car_heater_run_time')|float) > 0) %}
              {{ strptime(((as_timestamp('1970-01-01 ' ~ states('sensor.car_heater_departure_time')) - (states('sensor.car_heater_run_time')|float * 3600 + 3600))|timestamp_local), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
            {%else%}
              Never
            {%endif%}
          {% else %}
              waiting for sensors
          {% endif%}
  - platform: template
    sensors:
      car_heater_3h_before_start_time:
        friendly_name: '3h before start time'
        icon_template: mdi:clock
        value_template: >
          {% if states.sensor.car_heater_departure_time.state is defined %}
              {{ strptime(((as_timestamp('1970-01-01 ' ~ states('sensor.car_heater_departure_time')) - (10800 + 3600))|timestamp_local), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
          {% else %}
              waiting for sensors
          {% endif%}
  - platform: template
    sensors:
      car_heater_actual_stop_time:
        friendly_name: 'Faktisk stopptid (+15 min)'
        icon_template: mdi:clock
        value_template: >
         {{ strptime((as_timestamp('1970-01-01 ' ~ states('sensor.car_heater_departure_time')) - (float ( 45*60 )))|timestamp_local, '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}